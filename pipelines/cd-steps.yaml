secrets:
  - id: username
    keyvault: https://delphivault.vault.azure.net/secrets/UserName
  - id: password
    keyvault: https://delphivault.vault.azure.net/secrets/Password
  - id: clientid
    keyvault: https://delphivault.vault.azure.net/secrets/client_id
  - id: clientsecret
    keyvault: https://delphivault.vault.azure.net/secrets/client_secret
  - id: tenantid
    keyvault: https://delphivault.vault.azure.net/secrets/tenant_id


steps:
- checkout: none
- task: HelmInstaller@1
  displayName: 'install helm'
  inputs:
    helmVersionToInstall: $(helmVersion)
- download: ci-pipeline
  artifact: build-artifact
- bash: |
   az login \
        --service-principal \
        -u '{{.Secrets.clientid}}' \
        -p '{{.Secrets.clientsecret}}' \
        --tenant '{{.Secrets.tenantid}}'
    az aks get-credentials \
        -n $(aks) \
        -g $(rg)
    helm repo add \
        $(registryName) \
        https://$(registryServerName)/helm/v1/repo \
        --username '{{.Secrets.username}}' \
        --password '{{.Secrets.password}}'
    helmChartVersion=$(jq .helmChartVersion $(pipeline.workspace)/ci-pipeline/build-artifact/variables.json -r)
    helm upgrade \
        --namespace $(k8sNamespace) \
        --install \
        --wait \
        --version $helmChartVersion \
        --set image.repository=$(registryServerName)/$(projectName) \
        --set ingress.enabled=false \
        $(projectName) \
        $(registryName)/$(projectName)
  failOnStderr: true
  displayName: 'deploy helm chart'